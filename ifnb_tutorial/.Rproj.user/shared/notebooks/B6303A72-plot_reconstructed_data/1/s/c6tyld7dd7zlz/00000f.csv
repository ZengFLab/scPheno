"0","library(Seurat)"
"0","library(SeuratObject)"
"0","library(SeuratData)"
"0","library(dplyr)"
"0","library(useful)"
"0","library(data.table)"
"0",""
"0","LoadData('ifnb')"
"1","An object of class"
"1"," "
"1","Seurat"
"1"," "
"1","
"
"1","14053"
"1"," "
"1","features across"
"1"," "
"1","13999"
"1"," "
"1","samples within"
"1"," "
"1","1"
"1"," "
"1","assay"
"1"," "
"1","
"
"1","Active assay:"
"1"," "
"1","RNA"
"1"," "
"1","(14053 features, 0 variable features)"
"1","
"
"0","data <- fread('ifnb_celltype_denoised_expression.txt',data.table = FALSE)"
"0","rownames(data) <- data[,1]"
"0","data <- data[,-1]"
"0","data <- t(data)"
"0",""
"0","counts <- expm1(data)"
"0",""
"0",""
"0","recon <- CreateSeuratObject(counts, meta.data = ifnb@meta.data[colnames(data), ])"
"0","recon <- SetAssayData(recon, slot = 'data', data)"
"0","recon <- FindVariableFeatures(recon, nfeatures = 5000)"
"2","Calculating gene variances"
"2","
"
"2","0%   10   20   30   40   50   60   70   80   90   100%
"
"2","[----|----|----|----|----|----|----|----|----|----|
"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","|
"
"2","Calculating feature variances of standardized and clipped values"
"2","
"
"2","0%   10   20   30   40   50   60   70   80   90   100%
"
"2","[----|----|----|----|----|----|----|----|----|----|
"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","|
"
"0","recon <- ScaleData(recon)"
"2","Centering and scaling data matrix
"
"2","  |                                                                                                                                                  "
"2","  |                                                                                                                                            |   0%"
"2","  |                                                                                                                                                  "
"2","  |============================                                                                                                                |  20%"
"2","  |                                                                                                                                                  "
"2","  |========================================================                                                                                    |  40%"
"2","  |                                                                                                                                                  "
"2","  |====================================================================================                                                        |  60%"
"2","  |                                                                                                                                                  "
"2","  |================================================================================================================                            |  80%"
"2","  |                                                                                                                                                  "
"2","  |============================================================================================================================================| 100%"
"2","
"
"0","recon <- RunPCA(recon, verbose=FALSE)"
"0","recon <- RunUMAP(recon, dims=1:30)"
"2","20:26:50 UMAP embedding parameters a = 0.9922 b = 1.112
"
"2","20:26:50 Read 13999 rows and found 30 numeric columns
"
"2","20:26:50 Using Annoy for neighbor search, n_neighbors = 30
"
"2","20:26:50 Building Annoy index with metric = cosine, n_trees = 50
"
"2","0%   10   20   30   40   50   60   70   80   90   100%
"
"2","[----|----|----|----|----|----|----|----|----|----|
"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","|
"
"2","20:26:51 Writing NN index file to temp file /tmp/Rtmp2GulMU/file22d641f05d6f8
"
"2","20:26:51 Searching Annoy index using 1 thread, search_k = 3000
"
"2","20:26:54 Annoy recall = 100%
"
"2","20:26:54 Commencing smooth kNN distance calibration using 1 thread"
"2"," with target n_neighbors = 30
"
"2","20:26:55 Initializing from normalized Laplacian + noise (using irlba)
"
"2","20:26:56 Commencing optimization for 200 epochs, with 495230 positive edges
"
"2","Using method '"
"2","umap"
"2","'"
"2","
"
"2","0%   10   20   30   40   50   60   70   80   90   100%
"
"2","[----|----|----|----|----|----|----|----|----|----|
"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","|
"
"2","20:27:00 Optimization finished
"
