sk$metrics$silhouette_score(recon.pos, ifnb@meta.data[rownames(pos), 'sim'] %>% factor %>% as.numeric)
sk$metrics$silhouette_score(recon.pos, ifnb@meta.data[rownames(recon.pos), 'sim'] %>% factor %>% as.numeric)
sk$metrics$silhouette_score(recon.pos, ifnb@meta.data[rownames(recon.pos), 'stim'] %>% factor %>% as.numeric)
recon.pos <- Embeddings(recon, reduction = 'umap')
sk$metrics$silhouette_score(recon.pos, ifnb@meta.data[rownames(recon.pos), 'stim'] %>% factor %>% as.numeric)
sk$metrics$silhouette_score(recon.pos, ifnb@meta.data[rownames(recon.pos), 'cell_type'] %>% factor %>% as.numeric)
sk$metrics$silhouette_score(recon.pos, ifnb@meta.data[rownames(recon.pos), 'seurat_annotations'] %>% factor %>% as.numeric)
a <- sk$metrics$silhouette_samples(recon.pos, ifnb@meta.data[rownames(recon.pos), 'seurat_annotations'] %>% factor %>% as.numeric)
hist(a)
b <- sk$metrics$silhouette_samples(pos.umap, ifnb@meta.data[rownames(pos), 'seurat_annotations'] %>% factor %>% as.numeric)
hist(b)
recon.pos <- Embeddings(recon, reduction = 'pca')
a <- sk$metrics$silhouette_samples(recon.pos, ifnb@meta.data[rownames(recon.pos), 'seurat_annotations'] %>% factor %>% as.numeric)
hist(a)
b <- sk$metrics$silhouette_samples(pos, ifnb@meta.data[rownames(pos), 'seurat_annotations'] %>% factor %>% as.numeric)
hist(b)
Reductions(ifnb)
ifnb.pos <- Embeddings(ifnb, reduction = 'pca')
b <- sk$metrics$silhouette_samples(ifnb.pos, ifnb@meta.data[rownames(ifnb.pos), 'seurat_annotations'] %>% factor %>% as.numeric)
hist(b)
hist(a)
hist(b)
DimPlot(recon, reduction = 'umap', group.by = 'cell_type')
pos <- fread('ifnb_stim_noise_embeds.txt', data.table = FALSE, header = TRUE)
rownames(pos) <- pos[,1]
pos <- pos[,-1]
pos.umap <- umap(pos %>% scale, n_neighbors = 50)
pos.umap <- pos.umap %>% as.data.frame()
ggplot(pos.umap, aes(V1,V2)) + geom_point()
colnames(pos.umap) <- c('UMAP_1','UMAP_2')
recon[['umap']] <- CreateDimReducObject(as.matrix(pos.umap), key = 'UMAP_')
DimPlot(recon, reduction = 'umap', group.by = 'cell_type')
FeaturePlot(recon, reduction = 'umap', features = 'nCount_RNA')
DimPlot(recon, reduction = 'umap', group.by = 'cell_type')
p11 <- DimPlot(recon, reduction = 'umap', group.by = 'cell_type') +
ggtitle('Noise space (Cell type)') +
theme(plot.title = element_text(size=24),
axis.title = element_text(size=18),
legend.text = element_text(size=22))
p11
p12 <- DimPlot(recon, reduction = 'umap', group.by = 'cell_type') +
ggtitle('Noise space (Cell type)') +
theme(plot.title = element_text(size=24),
axis.title = element_text(size=18),
legend.text = element_text(size=22))
p12
save_plot(p12+theme(legend.position = 'none'), filename = 'scp_noise_celltype.png', base_width = 7, base_height = 6)
save_plot(p12 %>% get_legend(), filename = 'scp_noise_celltype_legend.png', base_width = 2, base_height = 6)
p12 <- DimPlot(recon, reduction = 'umap', group.by = 'cell_type') +
ggtitle('Noise space (Cell type)') +
theme(plot.title = element_text(size=24),
axis.title = element_text(size=18),
legend.text = element_text(size=24))
p12
save_plot(p12+theme(legend.position = 'none'), filename = 'scp_noise_celltype.png', base_width = 7, base_height = 6)
save_plot(p12 %>% get_legend(), filename = 'scp_noise_celltype_legend.png', base_width = 2, base_height = 6)
p12 <- DimPlot(recon, reduction = 'umap', group.by = 'cell_type') +
ggtitle('Noise space (Cell type)') +
theme(plot.title = element_text(size=24),
axis.title = element_text(size=18),
legend.text = element_text(size=22))
p12
save_plot(p12+theme(legend.position = 'none'), filename = 'scp_noise_celltype.png', base_width = 7, base_height = 6)
save_plot(p12 %>% get_legend(), filename = 'scp_noise_celltype_legend.png', base_width = 2, base_height = 6)
p13 <- DimPlot(recon, reduction = 'umap', group.by = 'seurat_annotations') +
ggtitle('Noise space (Cell subtype)') +
theme(plot.title = element_text(size=24),
axis.title = element_text(size=18),
legend.text = element_text(size=22))
p13
save_plot(p13+theme(legend.position = 'none'), filename = 'scp_noise_cellsubtype.png', base_width = 7, base_height = 6)
save_plot(p13 %>% get_legend(), filename = 'scp_noise_cellsubtype_legend.png', base_width = 2, base_height = 6)
save_plot(p13 %>% get_legend(), filename = 'scp_noise_cellsubtype_legend.png', base_width = 2.5, base_height = 6)
save_plot(p13 %>% get_legend(), filename = 'scp_noise_cellsubtype_legend.png', base_width = 3, base_height = 6)
p12 <- DimPlot(recon, reduction = 'umap', group.by = 'cell_type') +
ggtitle('Cell type') +
theme(plot.title = element_text(size=24),
axis.title = element_text(size=18),
legend.text = element_text(size=22))
p12
save_plot(p12+theme(legend.position = 'none'), filename = 'scp_noise_celltype.png', base_width = 7, base_height = 6)
save_plot(p12 %>% get_legend(), filename = 'scp_noise_celltype_legend.png', base_width = 2, base_height = 6)
p13 <- DimPlot(recon, reduction = 'umap', group.by = 'seurat_annotations') +
ggtitle('Cell subtype') +
theme(plot.title = element_text(size=24),
axis.title = element_text(size=18),
legend.text = element_text(size=22))
p13
save_plot(p13+theme(legend.position = 'none'), filename = 'scp_noise_cellsubtype.png', base_width = 7, base_height = 6)
save_plot(p13 %>% get_legend(), filename = 'scp_noise_cellsubtype_legend.png', base_width = 3, base_height = 6)
p14 <- DimPlot(recon, reduction = 'umap', group.by = 'stim') +
ggtitle('Stimulation') +
theme(plot.title = element_text(size=24),
axis.title = element_text(size=18),
legend.text = element_text(size=22))
p14
save_plot(p14+theme(legend.position = 'none'), filename = 'scp_noise_stim.png', base_width = 7, base_height = 6)
save_plot(p14 %>% get_legend(), filename = 'scp_noise_stim_legend.png', base_width = 3, base_height = 6)
recon.pos <- Embeddings(recon, reduction = 'pca')
a <- sk$metrics$silhouette_samples(recon.pos, ifnb@meta.data[rownames(recon.pos), 'seurat_annotations'] %>% factor %>% as.numeric)
hist(a)
b <- sk$metrics$silhouette_samples(pos, ifnb@meta.data[rownames(pos), 'seurat_annotations'] %>% factor %>% as.numeric)
hist(b)
hist(b, breaks = 30)
hist(b, breaks = 50)
sk$metrics$silhouette_score(pos, ifnb@meta.data[rownames(pos), 'seurat_annotations'] %>% factor %>% as.numeric)
mean(b)
b1 <- sk$metrics$silhouette_samples(pos, ifnb@meta.data[rownames(pos), 'cell_type'] %>% factor %>% as.numeric)
b2 <- sk$metrics$silhouette_samples(pos, ifnb@meta.data[rownames(pos), 'seurat_annotations'] %>% factor %>% as.numeric)
b3 <- sk$metrics$silhouette_samples(pos, ifnb@meta.data[rownames(pos), 'stim'] %>% factor %>% as.numeric)
hist(b1)
hist(b1,breaks = 50)
hist(b3,breaks = 50)
mean(b3)
p14
save_plot(p14 %>% get_legend(), filename = 'scp_noise_stim_legend.png', base_width = 2, base_height = 6)
save_plot(p12 %>% get_legend(), filename = 'scp_noise_celltype_legend.png', base_width = 3, base_height = 6)
save_plot(p14 %>% get_legend(), filename = 'scp_noise_stim_legend.png', base_width = 3, base_height = 6)
library(ggpubr)
head(b1)
df1 <- data.frame(Silhouette=b1)
df2 <- data.frame(Silhouette=b2)
df3 <- data.frame(Silhouette=b3)
gghistogram(df1, x = 'Silhouette', add = 'mean')
gghistogram(df1, x = 'Silhouette', add = 'mean', fill = "lightgray", rug = TRUE)
gghistogram(df1, x = 'Silhouette', add = 'mean', fill = "lightgray", rug = TRUE, bins = 50)
gghistogram(df2, x = 'Silhouette', add = 'mean', fill = "lightgray", rug = TRUE, bins = 50)
gghistogram(df3, x = 'Silhouette', add = 'mean', fill = "lightgray", rug = TRUE, bins = 50)
gghistogram(df1, x = 'Silhouette', add = 'mean', fill = "lightgray", rug = TRUE, bins = 50, add_density = TRUE)
gghistogram(df1, x = 'Silhouette', add = 'mean', fill = "lightgray", rug = TRUE, bins = 50)
gghistogram(df1, x = 'Silhouette', add = 'mean', fill = "lightgray", rug = TRUE, bins = 50)  +
labs(x='Silhouette score', y='Frequency', title = paste('Mean=',mean(b1),sep='')) +
theme(plot.title = element_text(size=24),
axis.title = element_text(size=18),
legend.text = element_text(size=22))
gghistogram(df1, x = 'Silhouette', add = 'mean', fill = "lightgray", rug = TRUE, bins = 50)  +
labs(x='Silhouette score', y='Frequency', title = paste('Mean=',mean(b1),sep='')) +
theme(plot.title = element_text(size=24, hjust = 0.5),
axis.title = element_text(size=18),
legend.text = element_text(size=22))
gghistogram(df1, x = 'Silhouette', add = 'mean', fill = "lightgray", rug = TRUE, bins = 50)  +
labs(x='Silhouette score', y='Frequency', title = paste('Mean=',round(mean(b1),3),sep='')) +
theme(plot.title = element_text(size=24, hjust = 0.5),
axis.title = element_text(size=18),
legend.text = element_text(size=22))
gghistogram(df2, x = 'Silhouette', add = 'mean', fill = "lightgray", rug = TRUE, bins = 50)  +
labs(x='Silhouette score', y='Frequency', title = paste('Mean=',round(mean(b2),3),sep='')) +
theme(plot.title = element_text(size=24, hjust = 0.5),
axis.title = element_text(size=18),
legend.text = element_text(size=22))
gghistogram(df3, x = 'Silhouette', add = 'mean', fill = "lightgray", rug = TRUE, bins = 50)  +
labs(x='Silhouette score', y='Frequency', title = paste('Mean=',round(mean(b3),3),sep='')) +
theme(plot.title = element_text(size=24, hjust = 0.5),
axis.title = element_text(size=18),
legend.text = element_text(size=22))
save_plot(
gghistogram(df1, x = 'Silhouette', add = 'mean', fill = "lightgray", rug = TRUE, bins = 50)  +
labs(x='Silhouette score', y='Frequency', title = paste('Mean=',round(mean(b1),3),sep='')) +
theme(plot.title = element_text(size=24, hjust = 0.5),
axis.title = element_text(size=18),
legend.text = element_text(size=22)),
filename = 'scp_noise_celltype_silh.png', base_width = 7, base_height = 6
)
save_plot(
gghistogram(df2, x = 'Silhouette', add = 'mean', fill = "lightgray", rug = TRUE, bins = 50)  +
labs(x='Silhouette score', y='Frequency', title = paste('Mean=',round(mean(b2),3),sep='')) +
theme(plot.title = element_text(size=24, hjust = 0.5),
axis.title = element_text(size=18),
legend.text = element_text(size=22)),
filename = 'scp_noise_cellsubtype_silh.png', base_width = 7, base_height = 6
)
save_plot(
gghistogram(df3, x = 'Silhouette', add = 'mean', fill = "lightgray", rug = TRUE, bins = 50)  +
labs(x='Silhouette score', y='Frequency', title = paste('Mean=',round(mean(b3),3),sep='')) +
theme(plot.title = element_text(size=24, hjust = 0.5),
axis.title = element_text(size=18),
legend.text = element_text(size=22)),
filename = 'scp_noise_noise_silh.png', base_width = 7, base_height = 6
)
library(Seurat)
library(SeuratData)
library(dplyr)
library(useful)
library(uwot)
library(ggpubr)
library(patchwork)
library(data.table)
library(reticulate)
use_python('/home/zengbio/anaconda3/envs/pyro/bin/python')
sk <- import('sklearn')
LoadData('ifnb')
data <- fread('ifnb_fulltype_denoised_expression.txt',data.table = FALSE)
rownames(data) <- data[,1]
data <- data[,-1]
data <- t(data)
data <- data * (10/max(data))
counts <- expm1(data)
recon <- CreateSeuratObject(counts, meta.data = ifnb@meta.data[colnames(data), ])
recon <- SetAssayData(recon, slot = 'data', data)
recon <- FindVariableFeatures(recon, nfeatures = 5000)
recon <- ScaleData(recon)
recon <- RunPCA(recon, verbose=FALSE)
recon.pos <- Embeddings(recon, reduction = 'pca')
a <- sk$metrics$silhouette_samples(recon.pos, ifnb@meta.data[rownames(recon.pos), 'seurat_annotations'] %>% factor %>% as.numeric)
ifnb.pos <- Embeddings(ifnb, reduction = 'pca')
b <- sk$metrics$silhouette_samples(ifnb.pos, ifnb@meta.data[rownames(ifnb.pos), 'seurat_annotations'] %>% factor %>% as.numeric)
df1 <- data.frame(Silhouette=a, source='Reconstructed')
df2 <- data.frame(Silhouette=b, source='Original')
df <- rbind(df1,df2)
gghistogram(df, x = "Silhouette",
add = "mean", rug = TRUE,
color = "source", fill = "source",
palette = c("#00AFBB", "#E7B800"))
gghistogram(df, x = "Silhouette", bins = 50,
add = "mean", rug = TRUE,
color = "source", fill = "source",
palette = c("#00AFBB", "#E7B800"))
data <- fread('ifnb_denoised_expression.txt',data.table = FALSE)
rownames(data) <- data[,1]
data <- data[,-1]
data <- t(data)
data <- data * (10/max(data))
counts <- expm1(data)
recon <- CreateSeuratObject(counts, meta.data = ifnb@meta.data[colnames(data), ])
recon <- SetAssayData(recon, slot = 'data', data)
recon <- FindVariableFeatures(recon, nfeatures = 5000)
recon <- ScaleData(recon)
recon <- RunPCA(recon, verbose=FALSE)
recon <- RunUMAP(recon, dims=1:18)
recon.pos <- Embeddings(recon, reduction = 'pca')
a <- sk$metrics$silhouette_samples(recon.pos, ifnb@meta.data[rownames(recon.pos), 'cell_type'] %>% factor %>% as.numeric)
df1 <- data.frame(Silhouette=a, source='Reconstructed')
df <- rbind(df1,df2)
gghistogram(df, x = "Silhouette", bins = 50,
add = "mean", rug = TRUE,
color = "source", fill = "source",
palette = c("#00AFBB", "#E7B800"))
recon.pos <- Embeddings(recon, reduction = 'pca')
a <- sk$metrics$silhouette_samples(recon.pos, ifnb@meta.data[rownames(recon.pos), 'cell_type'] %>% factor %>% as.numeric)
df1 <- data.frame(Silhouette=a, source='Reconstructed')
ifnb.pos <- Embeddings(ifnb, reduction = 'pca')
b <- sk$metrics$silhouette_samples(ifnb.pos, ifnb@meta.data[rownames(ifnb.pos), 'cell_type'] %>% factor %>% as.numeric)
df2 <- data.frame(Silhouette=b, source='Original')
df <- rbind(df1,df2)
gghistogram(df, x = "Silhouette", bins = 50,
add = "mean", rug = TRUE,
color = "source", fill = "source",
palette = c("#00AFBB", "#E7B800"))
recon.pos <- Embeddings(recon, reduction = 'umap')
a <- sk$metrics$silhouette_samples(recon.pos, ifnb@meta.data[rownames(recon.pos), 'cell_type'] %>% factor %>% as.numeric)
df1 <- data.frame(Silhouette=a, source='Reconstructed')
ifnb.pos <- Embeddings(ifnb, reduction = 'umap')
b <- sk$metrics$silhouette_samples(ifnb.pos, ifnb@meta.data[rownames(ifnb.pos), 'cell_type'] %>% factor %>% as.numeric)
df2 <- data.frame(Silhouette=b, source='Original')
df <- rbind(df1,df2)
gghistogram(df, x = "Silhouette", bins = 50,
add = "mean", rug = TRUE,
color = "source", fill = "source",
palette = c("#00AFBB", "#E7B800"))
b1 <- sk$metrics$silhouette_samples(pos.umap, ifnb@meta.data[rownames(pos), 'cell_type'] %>% factor %>% as.numeric)
b2 <- sk$metrics$silhouette_samples(pos.umap, ifnb@meta.data[rownames(pos), 'seurat_annotations'] %>% factor %>% as.numeric)
b3 <- sk$metrics$silhouette_samples(pos.umap, ifnb@meta.data[rownames(pos), 'stim'] %>% factor %>% as.numeric)
df1 <- data.frame(Silhouette=b1)
df2 <- data.frame(Silhouette=b2)
df3 <- data.frame(Silhouette=b3)
gghistogram(df1, x = 'Silhouette', add = 'mean', fill = "lightgray", rug = TRUE, bins = 50)  +
labs(x='Silhouette score', y='Frequency', title = paste('Mean=',round(mean(b1),3),sep='')) +
theme(plot.title = element_text(size=24, hjust = 0.5),
axis.title = element_text(size=18),
legend.text = element_text(size=22))
save_plot(
gghistogram(df1, x = 'Silhouette', add = 'mean', fill = "lightgray", rug = TRUE, bins = 50)  +
labs(x='Silhouette score', y='Frequency', title = paste('Mean=',round(mean(b1),3),sep='')) +
theme(plot.title = element_text(size=24, hjust = 0.5),
axis.title = element_text(size=18),
legend.text = element_text(size=22)),
filename = 'scp_noise_celltype_silh.png', base_width = 7, base_height = 6
)
gghistogram(df2, x = 'Silhouette', add = 'mean', fill = "lightgray", rug = TRUE, bins = 50)  +
labs(x='Silhouette score', y='Frequency', title = paste('Mean=',round(mean(b2),3),sep='')) +
theme(plot.title = element_text(size=24, hjust = 0.5),
axis.title = element_text(size=18),
legend.text = element_text(size=22))
save_plot(
gghistogram(df2, x = 'Silhouette', add = 'mean', fill = "lightgray", rug = TRUE, bins = 50)  +
labs(x='Silhouette score', y='Frequency', title = paste('Mean=',round(mean(b2),3),sep='')) +
theme(plot.title = element_text(size=24, hjust = 0.5),
axis.title = element_text(size=18),
legend.text = element_text(size=22)),
filename = 'scp_noise_cellsubtype_silh.png', base_width = 7, base_height = 6
)
gghistogram(df3, x = 'Silhouette', add = 'mean', fill = "lightgray", rug = TRUE, bins = 50)  +
labs(x='Silhouette score', y='Frequency', title = paste('Mean=',round(mean(b3),3),sep='')) +
theme(plot.title = element_text(size=24, hjust = 0.5),
axis.title = element_text(size=18),
legend.text = element_text(size=22))
save_plot(
gghistogram(df3, x = 'Silhouette', add = 'mean', fill = "lightgray", rug = TRUE, bins = 50)  +
labs(x='Silhouette score', y='Frequency', title = paste('Mean=',round(mean(b3),3),sep='')) +
theme(plot.title = element_text(size=24, hjust = 0.5),
axis.title = element_text(size=18),
legend.text = element_text(size=22)),
filename = 'scp_noise_noise_silh.png', base_width = 7, base_height = 6
)
recon.pos <- Embeddings(recon, reduction = 'umap')
a <- sk$metrics$silhouette_samples(recon.pos, ifnb@meta.data[rownames(recon.pos), 'cell_type'] %>% factor %>% as.numeric)
df1 <- data.frame(Silhouette=a, source='Reconstructed')
ifnb.pos <- Embeddings(ifnb, reduction = 'umap')
b <- sk$metrics$silhouette_samples(ifnb.pos, ifnb@meta.data[rownames(ifnb.pos), 'cell_type'] %>% factor %>% as.numeric)
df2 <- data.frame(Silhouette=b, source='Original')
df <- rbind(df1,df2)
gghistogram(df, x = "Silhouette", bins = 50,
add = "mean", rug = TRUE,
color = "source", fill = "source",
palette = c("#00AFBB", "#E7B800"))
p <- ggboxplot(df, x = "source", y = "Silhouette",
color = "source", palette =c("#00AFBB", "#E7B800"),
add = "jitter", shape = "dose")
p
p <- ggboxplot(df, x = "source", y = "Silhouette",
color = "source", palette =c("#00AFBB", "#E7B800"),
add = "jitter", shape = "source")
p
df <- rbind(df2,df1)
p <- ggboxplot(df, x = "source", y = "Silhouette",
color = "source", palette =c("#00AFBB", "#E7B800"),
add = "jitter", shape = "source")
p
my_comparisons <- list( c("Original", "Reconstructed") )
p + stat_compare_means(comparisons = my_comparisons)+ # Add pairwise comparisons p-value
stat_compare_means(label.y = 50)
p
p + stat_compare_means(comparisons = my_comparisons)+ # Add pairwise comparisons p-value
stat_compare_means(label.y = 0.6)
mean(a-b)
wilcox.test(a,b)
b <- sk$metrics$silhouette_samples(ifnb.pos[rownames(recon.pos),], ifnb@meta.data[rownames(recon.pos), 'cell_type'] %>% factor %>% as.numeric)
df2 <- data.frame(Silhouette=b, source='Original')
df <- rbind(df2,df1)
gghistogram(df, x = "Silhouette", bins = 50,
add = "mean", rug = TRUE,
color = "source", fill = "source",
palette = c("#00AFBB", "#E7B800"))
wilcox.test(a,b)
ks.test(a,b)
recon.pos <- Embeddings(recon, reduction = 'umap')
a <- sk$metrics$silhouette_samples(recon.pos, ifnb@meta.data[rownames(recon.pos), 'stim'] %>% factor %>% as.numeric)
df1 <- data.frame(Silhouette=a, source='Reconstructed')
ifnb.pos <- Embeddings(ifnb, reduction = 'umap')
b <- sk$metrics$silhouette_samples(ifnb.pos[rownames(recon.pos),], ifnb@meta.data[rownames(recon.pos), 'stim'] %>% factor %>% as.numeric)
df2 <- data.frame(Silhouette=b, source='Original')
df <- rbind(df2,df1)
gghistogram(df, x = "Silhouette", bins = 50,
add = "mean", rug = TRUE,
color = "source", fill = "source",
palette = c("#00AFBB", "#E7B800"))
?ks.test
wilcox.test(a,b,paired = TRUE)
recon.pos <- Embeddings(recon, reduction = 'umap')
a <- sk$metrics$silhouette_samples(recon.pos, ifnb@meta.data[rownames(recon.pos), 'seurat_annotations'] %>% factor %>% as.numeric)
df1 <- data.frame(Silhouette=a, source='Reconstructed')
ifnb.pos <- Embeddings(ifnb, reduction = 'umap')
b <- sk$metrics$silhouette_samples(ifnb.pos[rownames(recon.pos),], ifnb@meta.data[rownames(recon.pos), 'seurat_annotations'] %>% factor %>% as.numeric)
df2 <- data.frame(Silhouette=b, source='Original')
df <- rbind(df2,df1)
gghistogram(df, x = "Silhouette", bins = 50,
add = "mean", rug = TRUE,
color = "source", fill = "source",
palette = c("#00AFBB", "#E7B800"))
gghistogram(df, x = "Silhouette", bins = 50,
add = "mean", rug = TRUE,
color = "source", fill = "source",
palette = c("#00AFBB", "#E7B800"),
add_density = TRUE)
gghistogram(df, x = "Silhouette", bins = 50,
add = "mean", rug = TRUE,
color = "source", fill = "source",
palette = c("#00AFBB", "#E7B800"))
recon.pos <- Embeddings(recon, reduction = 'pca')
a <- sk$metrics$silhouette_samples(recon.pos, ifnb@meta.data[rownames(recon.pos), 'seurat_annotations'] %>% factor %>% as.numeric)
df1 <- data.frame(Silhouette=a, source='Reconstructed')
ifnb.pos <- Embeddings(ifnb, reduction = 'pca')
b <- sk$metrics$silhouette_samples(ifnb.pos[rownames(recon.pos),], ifnb@meta.data[rownames(recon.pos), 'seurat_annotations'] %>% factor %>% as.numeric)
df2 <- data.frame(Silhouette=b, source='Original')
df <- rbind(df2,df1)
gghistogram(df, x = "Silhouette", bins = 50,
add = "mean", rug = TRUE,
color = "source", fill = "source",
palette = c("#00AFBB", "#E7B800"))
wilcox.test(a,b,paired = TRUE)
abs(mean(a)-mean(b))
mean(abs(a-b))
recon.pos <- Embeddings(recon, reduction = 'pca')
a <- sk$metrics$silhouette_samples(recon.pos, ifnb@meta.data[rownames(recon.pos), 'cell_type'] %>% factor %>% as.numeric)
df1 <- data.frame(Silhouette=a, source='Reconstructed')
ifnb.pos <- Embeddings(ifnb, reduction = 'pca')
b <- sk$metrics$silhouette_samples(ifnb.pos[rownames(recon.pos),], ifnb@meta.data[rownames(recon.pos), 'cell_type'] %>% factor %>% as.numeric)
df2 <- data.frame(Silhouette=b, source='Original')
df <- rbind(df2,df1)
gghistogram(df, x = "Silhouette", bins = 50,
add = "mean", rug = TRUE,
color = "source", fill = "source",
palette = c("#00AFBB", "#E7B800"))
recon.pos <- Embeddings(recon, reduction = 'pca')
a <- sk$metrics$silhouette_samples(recon.pos, ifnb@meta.data[rownames(recon.pos), 'stim'] %>% factor %>% as.numeric)
df1 <- data.frame(Silhouette=a, source='Reconstructed')
ifnb.pos <- Embeddings(ifnb, reduction = 'pca')
b <- sk$metrics$silhouette_samples(ifnb.pos[rownames(recon.pos),], ifnb@meta.data[rownames(recon.pos), 'stim'] %>% factor %>% as.numeric)
df2 <- data.frame(Silhouette=b, source='Original')
df <- rbind(df2,df1)
gghistogram(df, x = "Silhouette", bins = 50,
add = "mean", rug = TRUE,
color = "source", fill = "source",
palette = c("#00AFBB", "#E7B800"))
gghistogram(df, x = "Silhouette", bins = 100,
add = "mean", rug = TRUE,
color = "source", fill = "source",
palette = c("#00AFBB", "#E7B800"))
recon.pos <- Embeddings(recon, reduction = 'pca')
a <- sk$metrics$silhouette_samples(recon.pos, ifnb@meta.data[rownames(recon.pos), 'seurat_annotations'] %>% factor %>% as.numeric)
df1 <- data.frame(Silhouette=a, source='Reconstructed')
ifnb.pos <- Embeddings(ifnb, reduction = 'pca')
b <- sk$metrics$silhouette_samples(ifnb.pos[rownames(recon.pos),], ifnb@meta.data[rownames(recon.pos), 'seurat_annotations'] %>% factor %>% as.numeric)
df2 <- data.frame(Silhouette=b, source='Original')
df <- rbind(df2,df1)
gghistogram(df, x = "Silhouette", bins = 100,
add = "mean", rug = TRUE,
color = "source", fill = "source",
palette = c("#00AFBB", "#E7B800"))
gghistogram(df, x = "Silhouette", bins = 100,
add = "mean", rug = TRUE,
color = "source", fill = "source",
palette = c("#00AFBB", "#E7B800"))  +
labs(x='Silhouette score', y='Frequency', title = paste('Mean diff.=',round(mean(abs(a-b)),3),sep='')) +
theme(plot.title = element_text(size=24, hjust = 0.5),
axis.title = element_text(size=18),
legend.text = element_text(size=22))
gghistogram(df, x = "Silhouette", bins = 100,
add = "mean", rug = TRUE,
color = "source", fill = "source",
palette = c("#00AFBB", "#E7B800"))  +
labs(x='Silhouette score', y='Frequency', title = paste('Mean diff.=',round(mean(abs(a-b)),3),sep='')) +
theme(plot.title = element_text(size=24, hjust = 0.5),
axis.title = element_text(size=18),
legend.title = element_blank(),
legend.text = element_text(size=22))
gghistogram(df, x = "Silhouette", bins = 100,
add = "mean", rug = TRUE,
color = "source", fill = "source",
palette = c("#00AFBB", "#E7B800"))  +
labs(x='Silhouette score', y='Frequency', title = paste('Mean diff.=',round(mean(abs(a-b)),3), ' (sd=',round(sd(abs(a-b)),3),')',sep='')) +
theme(plot.title = element_text(size=24, hjust = 0.5),
axis.title = element_text(size=18),
legend.title = element_blank(),
legend.text = element_text(size=22))
sd(abs(a-b))
mean(abs(a-b))
gghistogram(df, x = "Silhouette", bins = 100,
add = "mean", rug = TRUE,
color = "source", fill = "source",
palette = c("#00AFBB", "#E7B800"))  +
labs(x='Silhouette score', y='Frequency', title = paste('Mean diff.=',round(mean(abs(a-b)),4), ' (sd=',round(sd(abs(a-b)),4),')',sep='')) +
theme(plot.title = element_text(size=24, hjust = 0.5),
axis.title = element_text(size=18),
legend.title = element_blank(),
legend.text = element_text(size=22))
gghistogram(df, x = "Silhouette", bins = 100,
# add = "mean",
rug = TRUE,
color = "source", fill = "source",
palette = c("#00AFBB", "#E7B800"))  +
labs(x='Silhouette score', y='Frequency', title = paste('Mean diff.=',round(mean(abs(a-b)),4), ' (sd=',round(sd(abs(a-b)),4),')',sep='')) +
theme(plot.title = element_text(size=24, hjust = 0.5),
axis.title = element_text(size=18),
legend.title = element_blank(),
legend.text = element_text(size=22))
gghistogram(df, x = "Silhouette", bins = 100,
# add = "mean",
rug = TRUE,
color = "source", fill = "source",
palette = c("#00AFBB", "#E7B800"))  +
labs(x='Silhouette score', y='Frequency', title = paste('Mean diff.=',round(mean(abs(a-b)),3), ' (sd=',round(sd(abs(a-b)),3),')',sep='')) +
theme(plot.title = element_text(size=24, hjust = 0.5),
axis.title = element_text(size=18),
legend.title = element_blank(),
legend.text = element_text(size=22))
save_plot(
gghistogram(df, x = "Silhouette", bins = 100,
# add = "mean",
rug = TRUE,
color = "source", fill = "source",
palette = c("#00AFBB", "#E7B800"))  +
labs(x='Silhouette score', y='Frequency', title = paste('Mean diff.=',round(mean(abs(a-b)),3), ' (sd=',round(sd(abs(a-b)),3),')',sep='')) +
theme(plot.title = element_text(size=24, hjust = 0.5),
axis.title = element_text(size=18),
legend.title = element_blank(),
legend.text = element_text(size=22)),
filename = 'scp_silh_compare.png', base_width = 7, base_height = 6
)
save_plot(
gghistogram(df, x = "Silhouette", bins = 100,
# add = "mean",
rug = TRUE,
color = "source", fill = "source",
palette = c("#00AFBB", "#E7B800"))  +
labs(x='Silhouette score', y='Frequency', title = paste('Mean diff.=',round(mean(abs(a-b)),3), ' (sd=',round(sd(abs(a-b)),3),')',sep='')) +
theme(plot.title = element_text(size=24, hjust = 0.5),
axis.title = element_text(size=24),
legend.title = element_blank(),
legend.text = element_text(size=22)),
filename = 'scp_silh_compare.png', base_width = 7, base_height = 6
)
